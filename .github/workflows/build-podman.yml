on:
  push:
    branches:
      - main
  pull_request:
    # branches:
    #   - main
  # schedule:
  #   - cron: '0 0 * * *'
  workflow_dispatch:

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true
  
jobs:
  base:
    # runs-on: ubuntu-latest${{ ((github.event_name != 'schedule')) || '' }}
    runs-on: ubuntu-latest
    timeout-minutes: 90
    steps:
      - name: installs podman
        continue-on-error: false
        run: |
          sudo apt-get -y update
          sudo apt-get -y install podman
          sudo systemctl enable --now podman.socket podman.service
        # sudo bash -c 'echo "{ \"cgroup-parent\": \"/actions_job\",\"experimental\":true}" > /etc/docker/daemon.json'
        # sudo service docker restart
        # docker version -f '{{.Server.Experimental}}'
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: build slim image
        run: |
          cd image && ruby auto_build.rb base_slim
        continue-on-error: true
      - name: build release image
        run: |
          cd image && ruby auto_build.rb base
        continue-on-error: true
      - name: build test_build image
        run: |
          cd image && ruby auto_build.rb discourse_test_build
        continue-on-error: true
      - name: run specs
        continue-on-error: true
        run: |
          podman run --rm -e RUBY_ONLY=1 -e USE_TURBO=1 -e SKIP_PLUGINS=1 -e SKIP_LINT=1 docker.io/ngeorger/discourse_test:build
      - name: tag images
        id: tag-images
        run: |
          TAG=`date +%Y%m%d-%H%M`
          echo "tag=$(echo $TAG)" >> $GITHUB_OUTPUT
          podman tag docker.io/ngeorger/base:build_slim docker.io/ngeorger/base:2.0.$TAG-slim
          podman tag docker.io/ngeorger/base:build_slim docker.io/ngeorger/base:slim
          podman tag docker.io/ngeorger/base:build docker.io/ngeorger/base:2.0.$TAG
          podman tag docker.io/ngeorger/base:build docker.io/ngeorger/base:release
      - name: Print summary
        run: |
          podman images docker.io/ngeorger/base
      - name: push to dockerhub
        if: success() && (github.ref == 'refs/heads/main')
        env:
          DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
        run: |
          TAG=${{ steps.tag-images.outputs.tag }}
          podman login --username ngeorger --password $DOCKERHUB_PASSWORD docker.io
          podman push docker.io/ngeorger/base:2.0.$TAG-slim
          podman push docker.io/ngeorger/base:slim
          podman push docker.io/ngeorger/base:2.0.$TAG
          podman push docker.io/ngeorger/base:release
  # test:
  #   runs-on: ubuntu-20.04${{ ((github.event_name != 'schedule') && '-8core') || '' }}
  #   timeout-minutes: 30
  #   needs: base
  #   defaults:
  #     run:
  #       working-directory: image/discourse_test
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 1
  #     - name: build discourse_test:slim
  #       run: |
  #         podman buildx build . --load \
  #           --build-arg from_tag=slim \
  #           --target base \
  #           --tag docker.io/ngeorger/discourse_test:slim
  #     - name: build discourse_test:slim-browsers
  #       run: |
  #         podman buildx build . --load \
  #           --build-arg from_tag=slim \
  #           --target with_browsers \
  #           --tag docker.io/ngeorger/discourse_test:slim-browsers
  #     - name: build discourse_test:release
  #       run: |
  #         podman buildx build . --load \
  #           --build-arg from_tag=release \
  #           --target release \
  #           --tag docker.io/ngeorger/discourse_test:release
  #     - name: Print summary
  #       run: |
  #         podman images docker.io/ngeorger/discourse_test
  #     - name: push to dockerhub
  #       if: success() && (github.ref == 'refs/heads/main')
  #       env:
  #         DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
  #       run: |
  #         podman login --username ngeorger --password $DOCKERHUB_PASSWORD
  #         podman push docker.io/ngeorger/discourse_test:slim
  #         podman push docker.io/ngeorger/discourse_test:slim-browsers
  #         podman push docker.io/ngeorger/discourse_test:release
  dev:
    runs-on: ubuntu-20.04${{ ((github.event_name != 'schedule') && '-8core') || '' }}
    timeout-minutes: 30
    needs: base
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: build discourse_dev image
        run: |
          cd image && ruby auto_build.rb discourse_dev
      - name: push to dockerhub
        if: success() && (github.ref == 'refs/heads/main')
        env:
          DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
        run: |
          podman tag docker.io/ngeorger/discourse_dev:build docker.io/ngeorger/discourse_dev:release
          podman login --username ngeorger --password $DOCKERHUB_PASSWORD
          podman push docker.io/ngeorger/discourse_dev:release
  aarch64:
    runs-on: ubuntu-latest
    needs: base
    services:
      registry:
        image: registry
        ports:
          - 5000:5000
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: build slim image
        working-directory: image/base
        run: |
          docker buildx build . --load \
            -f slim.Dockerfile \
            --platform linux/arm64 \
            --tag docker.io/ngeorger/base:aarch64-slim
          docker tag docker.io/ngeorger/base:aarch64-slim localhost:5000/ngeorger/base:aarch64-slim
          docker push localhost:5000/ngeorger/base:aarch64-slim
      - name: tag slim image as release
        working-directory: image/base
        run: |
          docker tag ngeorger/base:aarch64-slim docker.io/ngeorger/base:aarch64
      - name: Print summary
        run: docker images ngeorger/base
      - name: push to dockerhub
        if: success() && (github.ref == 'refs/heads/main')
        env:
          DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
        run: |
          docker login --username ngeorger --password $DOCKERHUB_PASSWORD
          docker push ngeorger/base:aarch64
